# File Version: 2023.02.15

# File Version: 2023.02.15
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.autoflake]
in-place = true
check = false
remove-all-unused-imports = true

[tool.bandit]
tests = [
  "B103",
  "B108",
  "B306",
  "B307",
  "B313",
  "B314",
  "B315",
  "B316",
  "B317",
  "B318",
  "B319",
  "B320",
  "B325",
  "B601",
  "B602",
  "B604",
  "B608",
  "B609"
]

[tool.black]
line-length = 88
target-version = ["py39"]
exclude = 'generated'
preview = "True"

[tool.flake8]
exclude = [
  ".venv",
  ".git",
  ".tox",
  "docs",
  "venv",
  "bin",
  "lib",
  "deps",
  "build"
]
doctests = true
max-line-length = 88
extend-ignore = ["E203"]
ignore = [
  "E501",
  "W503",
  "E203",
  "D202",
  "W504",
  "A003",
  "E203",
  "E305",
  "E711",
  "E712",
  "E721",
  "E722",
  "E741",
  "F841",
  "N801",
  "N802",
  "N806",
  "W503",
  "W504"
]
import-order-style = "google"
application-import-names = ["sqlalchemy", "test", "pyalarmdotcomajax"]
enable-extensions = "G"

[tool.isort]
profile = "black"
force_sort_within_sections = true
known_first_party = ["pyalarmdotcomajax", "tests"]
forced_separate = ["tests"]
combine_as_imports = true

[tool.mypy]
python_version = "3.9"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
pretty = true
show_absolute_path = true
show_error_context = true
disallow_untyped_calls = false
exclude = ["tests/"]

[tool.pylint.BASIC]
class-const-naming-style = "any"
good-names = ["_", "ev", "ex", "fp", "i", "id", "j", "k", "Run", "ip"]

[tool.pylint.CODE_STYLE]
max-line-length-suggestions = 88

[tool.pylint.EXCEPTIONS]
overgeneral-exceptions = [
  "builtins.BaseException",
  "builtins.Exception",
  "homeassistant.exceptions.HomeAssistantError"
]

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint.MAIN]
py-version = "3.9"
ignore = ["tests"]
jobs = 2
load-plugins = ["pylint.extensions.code_style", "pylint.extensions.typing"]
persistent = false
fail-on = ["I"]

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "format",
  "abstract-method",
  "cyclic-import",
  "duplicate-code",
  "inconsistent-return-statements",
  "locally-disabled",
  "not-context-manager",
  "too-few-public-methods",
  "too-many-ancestors",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-locals",
  "too-many-public-methods",
  "too-many-return-statements",
  "too-many-statements",
  "too-many-boolean-expressions",
  "unused-argument",
  "wrong-import-order",
  "too-many-nested-blocks"
]
enable = [
  # "useless-suppression",  # temporarily every now and then to clean them up
  "use-symbolic-message-instead"
]

[tool.pylint.REPORTS]
score = false

[tool.pylint.TYPECHECK]
ignored-classes = ["_CountingAttr"]
mixin-class-rgx = ".*[Mm]ix[Ii]n"

[tool.pylint.TYPING]
runtime-typing = false

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = [".git", "testing_config"]
asyncio_mode = "auto"

[tool.tomlsort]
all = false
check = false
ignore_case = true
in_place = true
no_header = false
